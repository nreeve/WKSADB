//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("WKSAModel", "FK_Venue_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WKSADB.Country), "Venue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WKSADB.Venue), true)]
[assembly: EdmRelationshipAttribute("WKSAModel", "FK_TBL_EVENT_TBL_AGE", "AgeGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WKSADB.AgeGroup), "Division", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WKSADB.Division), true)]
[assembly: EdmRelationshipAttribute("WKSAModel", "FK_TBL_EVENT_TBL_EVENT_TYPE", "DivisionType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WKSADB.DivisionType), "Division", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WKSADB.Division), true)]
[assembly: EdmRelationshipAttribute("WKSAModel", "FK_TBL_EVENT_TBL_RANK", "Rank", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WKSADB.Rank), "Division", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WKSADB.Division), true)]
[assembly: EdmRelationshipAttribute("WKSAModel", "FK_TBL_TOURNAMENT_TBL_VENUE", "Venue", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WKSADB.Venue), "Tournament", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WKSADB.Tournament), true)]
[assembly: EdmRelationshipAttribute("WKSAModel", "FK_TBL_SCHOOL_TBL_COUNTRY", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WKSADB.Country), "School", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WKSADB.School), true)]
[assembly: EdmRelationshipAttribute("WKSAModel", "FK_TBL_TOURNAMENT_EVENT_TBL_EVENT", "Division", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WKSADB.Division), "TournamentDivision", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WKSADB.TournamentDivision), true)]
[assembly: EdmRelationshipAttribute("WKSAModel", "FK_TBL_TOURNAMENT_EVENT_TBL_TOURNAMENT", "Tournament", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WKSADB.Tournament), "TournamentDivision", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WKSADB.TournamentDivision), true)]
[assembly: EdmRelationshipAttribute("WKSAModel", "FK_TBL_STUDENT_TBL_COUNTRY", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WKSADB.Country), "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WKSADB.Student), true)]
[assembly: EdmRelationshipAttribute("WKSAModel", "FK_TBL_STUDENT_TBL_RANK", "Rank", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WKSADB.Rank), "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WKSADB.Student), true)]
[assembly: EdmRelationshipAttribute("WKSAModel", "FK_TBL_SCHOOL_TBL_STUDENT", "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WKSADB.Student), "School", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WKSADB.School), true)]
[assembly: EdmRelationshipAttribute("WKSAModel", "FK_TBL_STUDENT_TBL_SCHOOL", "School", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WKSADB.School), "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WKSADB.Student), true)]
[assembly: EdmRelationshipAttribute("WKSAModel", "FK_CompetitorDivision_Division", "Division", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WKSADB.Division), "CompetitorDivision", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WKSADB.CompetitorDivision), true)]
[assembly: EdmRelationshipAttribute("WKSAModel", "FK_AgeGroup_AgeGroup", "AgeGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WKSADB.AgeGroup), "AgeGroup1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WKSADB.AgeGroup), true)]
[assembly: EdmRelationshipAttribute("WKSAModel", "FK_Competitor_Rank", "Rank", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WKSADB.Rank), "Competitor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WKSADB.Competitor), true)]
[assembly: EdmRelationshipAttribute("WKSAModel", "FK_CompetitorDivision_Competitor", "Competitor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WKSADB.Competitor), "CompetitorDivision", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WKSADB.CompetitorDivision), true)]
[assembly: EdmRelationshipAttribute("WKSAModel", "FK_TBL_COMPETITOR_TBL_STUDENT", "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WKSADB.Student), "Competitor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WKSADB.Competitor), true)]
[assembly: EdmRelationshipAttribute("WKSAModel", "FK_TBL_COMPETITOR_TBL_TOURNAMENT", "Tournament", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WKSADB.Tournament), "Competitor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WKSADB.Competitor), true)]
[assembly: EdmRelationshipAttribute("WKSAModel", "FK_Competitor_GrandChampion", "GrandChampion", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(WKSADB.GrandChampion), "Competitor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WKSADB.Competitor), true)]
[assembly: EdmRelationshipAttribute("WKSAModel", "FK_TBL_GRAND_CHAMP_TBL_RANK", "Rank", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WKSADB.Rank), "GrandChampion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WKSADB.GrandChampion), true)]
[assembly: EdmRelationshipAttribute("WKSAModel", "TournamentGrandChampion", "GrandChampion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WKSADB.GrandChampion), "Tournament", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WKSADB.Tournament))]

#endregion

namespace WKSADB
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class WKSAEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new WKSAEntities object using the connection string found in the 'WKSAEntities' section of the application configuration file.
        /// </summary>
        public WKSAEntities() : base("name=WKSAEntities", "WKSAEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WKSAEntities object.
        /// </summary>
        public WKSAEntities(string connectionString) : base(connectionString, "WKSAEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WKSAEntities object.
        /// </summary>
        public WKSAEntities(EntityConnection connection) : base(connection, "WKSAEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Venue> Venues
        {
            get
            {
                if ((_Venues == null))
                {
                    _Venues = base.CreateObjectSet<Venue>("Venues");
                }
                return _Venues;
            }
        }
        private ObjectSet<Venue> _Venues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DivisionType> DivisionTypes
        {
            get
            {
                if ((_DivisionTypes == null))
                {
                    _DivisionTypes = base.CreateObjectSet<DivisionType>("DivisionTypes");
                }
                return _DivisionTypes;
            }
        }
        private ObjectSet<DivisionType> _DivisionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rank> Ranks
        {
            get
            {
                if ((_Ranks == null))
                {
                    _Ranks = base.CreateObjectSet<Rank>("Ranks");
                }
                return _Ranks;
            }
        }
        private ObjectSet<Rank> _Ranks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AgeGroup> AgeGroups
        {
            get
            {
                if ((_AgeGroups == null))
                {
                    _AgeGroups = base.CreateObjectSet<AgeGroup>("AgeGroups");
                }
                return _AgeGroups;
            }
        }
        private ObjectSet<AgeGroup> _AgeGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Division> Divisions
        {
            get
            {
                if ((_Divisions == null))
                {
                    _Divisions = base.CreateObjectSet<Division>("Divisions");
                }
                return _Divisions;
            }
        }
        private ObjectSet<Division> _Divisions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tournament> Tournaments
        {
            get
            {
                if ((_Tournaments == null))
                {
                    _Tournaments = base.CreateObjectSet<Tournament>("Tournaments");
                }
                return _Tournaments;
            }
        }
        private ObjectSet<Tournament> _Tournaments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<School> Schools
        {
            get
            {
                if ((_Schools == null))
                {
                    _Schools = base.CreateObjectSet<School>("Schools");
                }
                return _Schools;
            }
        }
        private ObjectSet<School> _Schools;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TournamentDivision> TournamentDivisions
        {
            get
            {
                if ((_TournamentDivisions == null))
                {
                    _TournamentDivisions = base.CreateObjectSet<TournamentDivision>("TournamentDivisions");
                }
                return _TournamentDivisions;
            }
        }
        private ObjectSet<TournamentDivision> _TournamentDivisions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Student> Students
        {
            get
            {
                if ((_Students == null))
                {
                    _Students = base.CreateObjectSet<Student>("Students");
                }
                return _Students;
            }
        }
        private ObjectSet<Student> _Students;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompetitorDivision> CompetitorDivisions
        {
            get
            {
                if ((_CompetitorDivisions == null))
                {
                    _CompetitorDivisions = base.CreateObjectSet<CompetitorDivision>("CompetitorDivisions");
                }
                return _CompetitorDivisions;
            }
        }
        private ObjectSet<CompetitorDivision> _CompetitorDivisions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Competitor> Competitors
        {
            get
            {
                if ((_Competitors == null))
                {
                    _Competitors = base.CreateObjectSet<Competitor>("Competitors");
                }
                return _Competitors;
            }
        }
        private ObjectSet<Competitor> _Competitors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GrandChampion> GrandChampions
        {
            get
            {
                if ((_GrandChampions == null))
                {
                    _GrandChampions = base.CreateObjectSet<GrandChampion>("GrandChampions");
                }
                return _GrandChampions;
            }
        }
        private ObjectSet<GrandChampion> _GrandChampions;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Venues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVenues(Venue venue)
        {
            base.AddObject("Venues", venue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DivisionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDivisionTypes(DivisionType divisionType)
        {
            base.AddObject("DivisionTypes", divisionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ranks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRanks(Rank rank)
        {
            base.AddObject("Ranks", rank);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AgeGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAgeGroups(AgeGroup ageGroup)
        {
            base.AddObject("AgeGroups", ageGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Divisions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDivisions(Division division)
        {
            base.AddObject("Divisions", division);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tournaments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTournaments(Tournament tournament)
        {
            base.AddObject("Tournaments", tournament);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Schools EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSchools(School school)
        {
            base.AddObject("Schools", school);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TournamentDivisions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTournamentDivisions(TournamentDivision tournamentDivision)
        {
            base.AddObject("TournamentDivisions", tournamentDivision);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Students EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudents(Student student)
        {
            base.AddObject("Students", student);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompetitorDivisions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompetitorDivisions(CompetitorDivision competitorDivision)
        {
            base.AddObject("CompetitorDivisions", competitorDivision);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Competitors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompetitors(Competitor competitor)
        {
            base.AddObject("Competitors", competitor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GrandChampions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGrandChampions(GrandChampion grandChampion)
        {
            base.AddObject("GrandChampions", grandChampion);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WKSAModel", Name="AgeGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AgeGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AgeGroup object.
        /// </summary>
        /// <param name="ageGroupId">Initial value of the AgeGroupId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="isSparringGroup">Initial value of the IsSparringGroup property.</param>
        public static AgeGroup CreateAgeGroup(global::System.Int32 ageGroupId, global::System.String description, global::System.Boolean isSparringGroup)
        {
            AgeGroup ageGroup = new AgeGroup();
            ageGroup.AgeGroupId = ageGroupId;
            ageGroup.Description = description;
            ageGroup.IsSparringGroup = isSparringGroup;
            return ageGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgeGroupId
        {
            get
            {
                return _AgeGroupId;
            }
            set
            {
                if (_AgeGroupId != value)
                {
                    OnAgeGroupIdChanging(value);
                    ReportPropertyChanging("AgeGroupId");
                    _AgeGroupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AgeGroupId");
                    OnAgeGroupIdChanged();
                }
            }
        }
        private global::System.Int32 _AgeGroupId;
        partial void OnAgeGroupIdChanging(global::System.Int32 value);
        partial void OnAgeGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FromAge
        {
            get
            {
                return _FromAge;
            }
            set
            {
                OnFromAgeChanging(value);
                ReportPropertyChanging("FromAge");
                _FromAge = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromAge");
                OnFromAgeChanged();
            }
        }
        private Nullable<global::System.Int32> _FromAge;
        partial void OnFromAgeChanging(Nullable<global::System.Int32> value);
        partial void OnFromAgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ToAge
        {
            get
            {
                return _ToAge;
            }
            set
            {
                OnToAgeChanging(value);
                ReportPropertyChanging("ToAge");
                _ToAge = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToAge");
                OnToAgeChanged();
            }
        }
        private Nullable<global::System.Int32> _ToAge;
        partial void OnToAgeChanging(Nullable<global::System.Int32> value);
        partial void OnToAgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSparringGroup
        {
            get
            {
                return _IsSparringGroup;
            }
            set
            {
                OnIsSparringGroupChanging(value);
                ReportPropertyChanging("IsSparringGroup");
                _IsSparringGroup = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSparringGroup");
                OnIsSparringGroupChanged();
            }
        }
        private global::System.Boolean _IsSparringGroup;
        partial void OnIsSparringGroupChanging(global::System.Boolean value);
        partial void OnIsSparringGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentAgeGroupId
        {
            get
            {
                return _ParentAgeGroupId;
            }
            set
            {
                OnParentAgeGroupIdChanging(value);
                ReportPropertyChanging("ParentAgeGroupId");
                _ParentAgeGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentAgeGroupId");
                OnParentAgeGroupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentAgeGroupId;
        partial void OnParentAgeGroupIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentAgeGroupIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_EVENT_TBL_AGE", "Division")]
        public EntityCollection<Division> Divisions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Division>("WKSAModel.FK_TBL_EVENT_TBL_AGE", "Division");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Division>("WKSAModel.FK_TBL_EVENT_TBL_AGE", "Division", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_AgeGroup_AgeGroup", "AgeGroup1")]
        public EntityCollection<AgeGroup> AgeGroup1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AgeGroup>("WKSAModel.FK_AgeGroup_AgeGroup", "AgeGroup1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AgeGroup>("WKSAModel.FK_AgeGroup_AgeGroup", "AgeGroup1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_AgeGroup_AgeGroup", "AgeGroup")]
        public AgeGroup AgeGroup2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AgeGroup>("WKSAModel.FK_AgeGroup_AgeGroup", "AgeGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AgeGroup>("WKSAModel.FK_AgeGroup_AgeGroup", "AgeGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AgeGroup> AgeGroup2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AgeGroup>("WKSAModel.FK_AgeGroup_AgeGroup", "AgeGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AgeGroup>("WKSAModel.FK_AgeGroup_AgeGroup", "AgeGroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WKSAModel", Name="Competitor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Competitor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Competitor object.
        /// </summary>
        /// <param name="competitorId">Initial value of the CompetitorId property.</param>
        /// <param name="tournamentId">Initial value of the TournamentId property.</param>
        /// <param name="studentId">Initial value of the StudentId property.</param>
        /// <param name="fee">Initial value of the Fee property.</param>
        /// <param name="rankId">Initial value of the RankId property.</param>
        /// <param name="age">Initial value of the Age property.</param>
        public static Competitor CreateCompetitor(global::System.Int32 competitorId, global::System.Int32 tournamentId, global::System.Int32 studentId, global::System.Decimal fee, global::System.Int32 rankId, global::System.Int32 age)
        {
            Competitor competitor = new Competitor();
            competitor.CompetitorId = competitorId;
            competitor.TournamentId = tournamentId;
            competitor.StudentId = studentId;
            competitor.Fee = fee;
            competitor.RankId = rankId;
            competitor.Age = age;
            return competitor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitorId
        {
            get
            {
                return _CompetitorId;
            }
            set
            {
                if (_CompetitorId != value)
                {
                    OnCompetitorIdChanging(value);
                    ReportPropertyChanging("CompetitorId");
                    _CompetitorId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompetitorId");
                    OnCompetitorIdChanged();
                }
            }
        }
        private global::System.Int32 _CompetitorId;
        partial void OnCompetitorIdChanging(global::System.Int32 value);
        partial void OnCompetitorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TournamentId
        {
            get
            {
                return _TournamentId;
            }
            set
            {
                OnTournamentIdChanging(value);
                ReportPropertyChanging("TournamentId");
                _TournamentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TournamentId");
                OnTournamentIdChanged();
            }
        }
        private global::System.Int32 _TournamentId;
        partial void OnTournamentIdChanging(global::System.Int32 value);
        partial void OnTournamentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudentId
        {
            get
            {
                return _StudentId;
            }
            set
            {
                OnStudentIdChanging(value);
                ReportPropertyChanging("StudentId");
                _StudentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudentId");
                OnStudentIdChanged();
            }
        }
        private global::System.Int32 _StudentId;
        partial void OnStudentIdChanging(global::System.Int32 value);
        partial void OnStudentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Fee
        {
            get
            {
                return _Fee;
            }
            set
            {
                OnFeeChanging(value);
                ReportPropertyChanging("Fee");
                _Fee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Fee");
                OnFeeChanged();
            }
        }
        private global::System.Decimal _Fee;
        partial void OnFeeChanging(global::System.Decimal value);
        partial void OnFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RankId
        {
            get
            {
                return _RankId;
            }
            set
            {
                OnRankIdChanging(value);
                ReportPropertyChanging("RankId");
                _RankId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RankId");
                OnRankIdChanged();
            }
        }
        private global::System.Int32 _RankId;
        partial void OnRankIdChanging(global::System.Int32 value);
        partial void OnRankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private global::System.Int32 _Age;
        partial void OnAgeChanging(global::System.Int32 value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GrandChampionId
        {
            get
            {
                return _GrandChampionId;
            }
            set
            {
                OnGrandChampionIdChanging(value);
                ReportPropertyChanging("GrandChampionId");
                _GrandChampionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GrandChampionId");
                OnGrandChampionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GrandChampionId;
        partial void OnGrandChampionIdChanging(Nullable<global::System.Int32> value);
        partial void OnGrandChampionIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_Competitor_Rank", "Rank")]
        public Rank Rank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("WKSAModel.FK_Competitor_Rank", "Rank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("WKSAModel.FK_Competitor_Rank", "Rank").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Rank> RankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("WKSAModel.FK_Competitor_Rank", "Rank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Rank>("WKSAModel.FK_Competitor_Rank", "Rank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_CompetitorDivision_Competitor", "CompetitorDivision")]
        public EntityCollection<CompetitorDivision> CompetitorDivisions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetitorDivision>("WKSAModel.FK_CompetitorDivision_Competitor", "CompetitorDivision");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetitorDivision>("WKSAModel.FK_CompetitorDivision_Competitor", "CompetitorDivision", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_COMPETITOR_TBL_STUDENT", "Student")]
        public Student Student
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("WKSAModel.FK_TBL_COMPETITOR_TBL_STUDENT", "Student").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("WKSAModel.FK_TBL_COMPETITOR_TBL_STUDENT", "Student").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Student> StudentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("WKSAModel.FK_TBL_COMPETITOR_TBL_STUDENT", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Student>("WKSAModel.FK_TBL_COMPETITOR_TBL_STUDENT", "Student", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_COMPETITOR_TBL_TOURNAMENT", "Tournament")]
        public Tournament Tournament
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("WKSAModel.FK_TBL_COMPETITOR_TBL_TOURNAMENT", "Tournament").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("WKSAModel.FK_TBL_COMPETITOR_TBL_TOURNAMENT", "Tournament").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tournament> TournamentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("WKSAModel.FK_TBL_COMPETITOR_TBL_TOURNAMENT", "Tournament");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tournament>("WKSAModel.FK_TBL_COMPETITOR_TBL_TOURNAMENT", "Tournament", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_Competitor_GrandChampion", "GrandChampion")]
        public GrandChampion GrandChampion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GrandChampion>("WKSAModel.FK_Competitor_GrandChampion", "GrandChampion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GrandChampion>("WKSAModel.FK_Competitor_GrandChampion", "GrandChampion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GrandChampion> GrandChampionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GrandChampion>("WKSAModel.FK_Competitor_GrandChampion", "GrandChampion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GrandChampion>("WKSAModel.FK_Competitor_GrandChampion", "GrandChampion", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WKSAModel", Name="CompetitorDivision")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompetitorDivision : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompetitorDivision object.
        /// </summary>
        /// <param name="competitorId">Initial value of the CompetitorId property.</param>
        /// <param name="divisionId">Initial value of the DivisionId property.</param>
        public static CompetitorDivision CreateCompetitorDivision(global::System.Int32 competitorId, global::System.Int32 divisionId)
        {
            CompetitorDivision competitorDivision = new CompetitorDivision();
            competitorDivision.CompetitorId = competitorId;
            competitorDivision.DivisionId = divisionId;
            return competitorDivision;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitorId
        {
            get
            {
                return _CompetitorId;
            }
            set
            {
                if (_CompetitorId != value)
                {
                    OnCompetitorIdChanging(value);
                    ReportPropertyChanging("CompetitorId");
                    _CompetitorId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompetitorId");
                    OnCompetitorIdChanged();
                }
            }
        }
        private global::System.Int32 _CompetitorId;
        partial void OnCompetitorIdChanging(global::System.Int32 value);
        partial void OnCompetitorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DivisionId
        {
            get
            {
                return _DivisionId;
            }
            set
            {
                if (_DivisionId != value)
                {
                    OnDivisionIdChanging(value);
                    ReportPropertyChanging("DivisionId");
                    _DivisionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DivisionId");
                    OnDivisionIdChanged();
                }
            }
        }
        private global::System.Int32 _DivisionId;
        partial void OnDivisionIdChanging(global::System.Int32 value);
        partial void OnDivisionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Result
        {
            get
            {
                return _Result;
            }
            set
            {
                OnResultChanging(value);
                ReportPropertyChanging("Result");
                _Result = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Result");
                OnResultChanged();
            }
        }
        private Nullable<global::System.Int32> _Result;
        partial void OnResultChanging(Nullable<global::System.Int32> value);
        partial void OnResultChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_CompetitorDivision_Division", "Division")]
        public Division Division
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("WKSAModel.FK_CompetitorDivision_Division", "Division").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("WKSAModel.FK_CompetitorDivision_Division", "Division").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Division> DivisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("WKSAModel.FK_CompetitorDivision_Division", "Division");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Division>("WKSAModel.FK_CompetitorDivision_Division", "Division", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_CompetitorDivision_Competitor", "Competitor")]
        public Competitor Competitor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competitor>("WKSAModel.FK_CompetitorDivision_Competitor", "Competitor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competitor>("WKSAModel.FK_CompetitorDivision_Competitor", "Competitor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Competitor> CompetitorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competitor>("WKSAModel.FK_CompetitorDivision_Competitor", "Competitor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Competitor>("WKSAModel.FK_CompetitorDivision_Competitor", "Competitor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WKSAModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        /// <param name="countryName">Initial value of the CountryName property.</param>
        public static Country CreateCountry(global::System.Int32 countryId, global::System.String countryName)
        {
            Country country = new Country();
            country.CountryId = countryId;
            country.CountryName = countryName;
            return country;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                if (_CountryId != value)
                {
                    OnCountryIdChanging(value);
                    ReportPropertyChanging("CountryId");
                    _CountryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryId");
                    OnCountryIdChanged();
                }
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_Venue_Country", "Venue")]
        public EntityCollection<Venue> Venues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Venue>("WKSAModel.FK_Venue_Country", "Venue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Venue>("WKSAModel.FK_Venue_Country", "Venue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_SCHOOL_TBL_COUNTRY", "School")]
        public EntityCollection<School> Schools
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<School>("WKSAModel.FK_TBL_SCHOOL_TBL_COUNTRY", "School");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<School>("WKSAModel.FK_TBL_SCHOOL_TBL_COUNTRY", "School", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_STUDENT_TBL_COUNTRY", "Student")]
        public EntityCollection<Student> Students
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Student>("WKSAModel.FK_TBL_STUDENT_TBL_COUNTRY", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Student>("WKSAModel.FK_TBL_STUDENT_TBL_COUNTRY", "Student", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WKSAModel", Name="Division")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Division : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Division object.
        /// </summary>
        /// <param name="divisionId">Initial value of the DivisionId property.</param>
        /// <param name="divisionName">Initial value of the DivisionName property.</param>
        /// <param name="divisionTypeId">Initial value of the DivisionTypeId property.</param>
        /// <param name="rankId">Initial value of the RankId property.</param>
        /// <param name="ageGroupId">Initial value of the AgeGroupId property.</param>
        public static Division CreateDivision(global::System.Int32 divisionId, global::System.String divisionName, global::System.Int32 divisionTypeId, global::System.Int32 rankId, global::System.Int32 ageGroupId)
        {
            Division division = new Division();
            division.DivisionId = divisionId;
            division.DivisionName = divisionName;
            division.DivisionTypeId = divisionTypeId;
            division.RankId = rankId;
            division.AgeGroupId = ageGroupId;
            return division;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DivisionId
        {
            get
            {
                return _DivisionId;
            }
            set
            {
                if (_DivisionId != value)
                {
                    OnDivisionIdChanging(value);
                    ReportPropertyChanging("DivisionId");
                    _DivisionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DivisionId");
                    OnDivisionIdChanged();
                }
            }
        }
        private global::System.Int32 _DivisionId;
        partial void OnDivisionIdChanging(global::System.Int32 value);
        partial void OnDivisionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DivisionName
        {
            get
            {
                return _DivisionName;
            }
            set
            {
                OnDivisionNameChanging(value);
                ReportPropertyChanging("DivisionName");
                _DivisionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DivisionName");
                OnDivisionNameChanged();
            }
        }
        private global::System.String _DivisionName;
        partial void OnDivisionNameChanging(global::System.String value);
        partial void OnDivisionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DivisionTypeId
        {
            get
            {
                return _DivisionTypeId;
            }
            set
            {
                OnDivisionTypeIdChanging(value);
                ReportPropertyChanging("DivisionTypeId");
                _DivisionTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DivisionTypeId");
                OnDivisionTypeIdChanged();
            }
        }
        private global::System.Int32 _DivisionTypeId;
        partial void OnDivisionTypeIdChanging(global::System.Int32 value);
        partial void OnDivisionTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RankId
        {
            get
            {
                return _RankId;
            }
            set
            {
                OnRankIdChanging(value);
                ReportPropertyChanging("RankId");
                _RankId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RankId");
                OnRankIdChanged();
            }
        }
        private global::System.Int32 _RankId;
        partial void OnRankIdChanging(global::System.Int32 value);
        partial void OnRankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgeGroupId
        {
            get
            {
                return _AgeGroupId;
            }
            set
            {
                OnAgeGroupIdChanging(value);
                ReportPropertyChanging("AgeGroupId");
                _AgeGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgeGroupId");
                OnAgeGroupIdChanged();
            }
        }
        private global::System.Int32 _AgeGroupId;
        partial void OnAgeGroupIdChanging(global::System.Int32 value);
        partial void OnAgeGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_EVENT_TBL_AGE", "AgeGroup")]
        public AgeGroup AgeGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AgeGroup>("WKSAModel.FK_TBL_EVENT_TBL_AGE", "AgeGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AgeGroup>("WKSAModel.FK_TBL_EVENT_TBL_AGE", "AgeGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AgeGroup> AgeGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AgeGroup>("WKSAModel.FK_TBL_EVENT_TBL_AGE", "AgeGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AgeGroup>("WKSAModel.FK_TBL_EVENT_TBL_AGE", "AgeGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_EVENT_TBL_EVENT_TYPE", "DivisionType")]
        public DivisionType DivisionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DivisionType>("WKSAModel.FK_TBL_EVENT_TBL_EVENT_TYPE", "DivisionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DivisionType>("WKSAModel.FK_TBL_EVENT_TBL_EVENT_TYPE", "DivisionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DivisionType> DivisionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DivisionType>("WKSAModel.FK_TBL_EVENT_TBL_EVENT_TYPE", "DivisionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DivisionType>("WKSAModel.FK_TBL_EVENT_TBL_EVENT_TYPE", "DivisionType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_EVENT_TBL_RANK", "Rank")]
        public Rank Rank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("WKSAModel.FK_TBL_EVENT_TBL_RANK", "Rank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("WKSAModel.FK_TBL_EVENT_TBL_RANK", "Rank").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Rank> RankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("WKSAModel.FK_TBL_EVENT_TBL_RANK", "Rank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Rank>("WKSAModel.FK_TBL_EVENT_TBL_RANK", "Rank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_TOURNAMENT_EVENT_TBL_EVENT", "TournamentDivision")]
        public EntityCollection<TournamentDivision> TournamentDivisions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TournamentDivision>("WKSAModel.FK_TBL_TOURNAMENT_EVENT_TBL_EVENT", "TournamentDivision");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TournamentDivision>("WKSAModel.FK_TBL_TOURNAMENT_EVENT_TBL_EVENT", "TournamentDivision", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_CompetitorDivision_Division", "CompetitorDivision")]
        public EntityCollection<CompetitorDivision> CompetitorDivisions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetitorDivision>("WKSAModel.FK_CompetitorDivision_Division", "CompetitorDivision");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetitorDivision>("WKSAModel.FK_CompetitorDivision_Division", "CompetitorDivision", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WKSAModel", Name="DivisionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DivisionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DivisionType object.
        /// </summary>
        /// <param name="divisionTypeId">Initial value of the DivisionTypeId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="isGrandChampionDivision">Initial value of the IsGrandChampionDivision property.</param>
        public static DivisionType CreateDivisionType(global::System.Int32 divisionTypeId, global::System.String description, global::System.Boolean isGrandChampionDivision)
        {
            DivisionType divisionType = new DivisionType();
            divisionType.DivisionTypeId = divisionTypeId;
            divisionType.Description = description;
            divisionType.IsGrandChampionDivision = isGrandChampionDivision;
            return divisionType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DivisionTypeId
        {
            get
            {
                return _DivisionTypeId;
            }
            set
            {
                if (_DivisionTypeId != value)
                {
                    OnDivisionTypeIdChanging(value);
                    ReportPropertyChanging("DivisionTypeId");
                    _DivisionTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DivisionTypeId");
                    OnDivisionTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _DivisionTypeId;
        partial void OnDivisionTypeIdChanging(global::System.Int32 value);
        partial void OnDivisionTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsGrandChampionDivision
        {
            get
            {
                return _IsGrandChampionDivision;
            }
            set
            {
                OnIsGrandChampionDivisionChanging(value);
                ReportPropertyChanging("IsGrandChampionDivision");
                _IsGrandChampionDivision = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsGrandChampionDivision");
                OnIsGrandChampionDivisionChanged();
            }
        }
        private global::System.Boolean _IsGrandChampionDivision;
        partial void OnIsGrandChampionDivisionChanging(global::System.Boolean value);
        partial void OnIsGrandChampionDivisionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_EVENT_TBL_EVENT_TYPE", "Division")]
        public EntityCollection<Division> Divisions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Division>("WKSAModel.FK_TBL_EVENT_TBL_EVENT_TYPE", "Division");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Division>("WKSAModel.FK_TBL_EVENT_TBL_EVENT_TYPE", "Division", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WKSAModel", Name="GrandChampion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GrandChampion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GrandChampion object.
        /// </summary>
        /// <param name="grandChampionId">Initial value of the GrandChampionId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="rankId">Initial value of the RankId property.</param>
        /// <param name="divisionCount">Initial value of the DivisionCount property.</param>
        public static GrandChampion CreateGrandChampion(global::System.Int32 grandChampionId, global::System.String description, global::System.Int32 rankId, global::System.Int32 divisionCount)
        {
            GrandChampion grandChampion = new GrandChampion();
            grandChampion.GrandChampionId = grandChampionId;
            grandChampion.Description = description;
            grandChampion.RankId = rankId;
            grandChampion.DivisionCount = divisionCount;
            return grandChampion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GrandChampionId
        {
            get
            {
                return _GrandChampionId;
            }
            set
            {
                if (_GrandChampionId != value)
                {
                    OnGrandChampionIdChanging(value);
                    ReportPropertyChanging("GrandChampionId");
                    _GrandChampionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GrandChampionId");
                    OnGrandChampionIdChanged();
                }
            }
        }
        private global::System.Int32 _GrandChampionId;
        partial void OnGrandChampionIdChanging(global::System.Int32 value);
        partial void OnGrandChampionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RankId
        {
            get
            {
                return _RankId;
            }
            set
            {
                OnRankIdChanging(value);
                ReportPropertyChanging("RankId");
                _RankId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RankId");
                OnRankIdChanged();
            }
        }
        private global::System.Int32 _RankId;
        partial void OnRankIdChanging(global::System.Int32 value);
        partial void OnRankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FromAge
        {
            get
            {
                return _FromAge;
            }
            set
            {
                OnFromAgeChanging(value);
                ReportPropertyChanging("FromAge");
                _FromAge = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromAge");
                OnFromAgeChanged();
            }
        }
        private Nullable<global::System.Int32> _FromAge;
        partial void OnFromAgeChanging(Nullable<global::System.Int32> value);
        partial void OnFromAgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ToAge
        {
            get
            {
                return _ToAge;
            }
            set
            {
                OnToAgeChanging(value);
                ReportPropertyChanging("ToAge");
                _ToAge = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToAge");
                OnToAgeChanged();
            }
        }
        private Nullable<global::System.Int32> _ToAge;
        partial void OnToAgeChanging(Nullable<global::System.Int32> value);
        partial void OnToAgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DivisionCount
        {
            get
            {
                return _DivisionCount;
            }
            set
            {
                OnDivisionCountChanging(value);
                ReportPropertyChanging("DivisionCount");
                _DivisionCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DivisionCount");
                OnDivisionCountChanged();
            }
        }
        private global::System.Int32 _DivisionCount;
        partial void OnDivisionCountChanging(global::System.Int32 value);
        partial void OnDivisionCountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_Competitor_GrandChampion", "Competitor")]
        public EntityCollection<Competitor> Competitors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Competitor>("WKSAModel.FK_Competitor_GrandChampion", "Competitor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Competitor>("WKSAModel.FK_Competitor_GrandChampion", "Competitor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_GRAND_CHAMP_TBL_RANK", "Rank")]
        public Rank Rank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("WKSAModel.FK_TBL_GRAND_CHAMP_TBL_RANK", "Rank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("WKSAModel.FK_TBL_GRAND_CHAMP_TBL_RANK", "Rank").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Rank> RankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("WKSAModel.FK_TBL_GRAND_CHAMP_TBL_RANK", "Rank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Rank>("WKSAModel.FK_TBL_GRAND_CHAMP_TBL_RANK", "Rank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "TournamentGrandChampion", "Tournament")]
        public EntityCollection<Tournament> Tournaments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tournament>("WKSAModel.TournamentGrandChampion", "Tournament");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tournament>("WKSAModel.TournamentGrandChampion", "Tournament", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WKSAModel", Name="Rank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rank : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rank object.
        /// </summary>
        /// <param name="rankId">Initial value of the RankId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Rank CreateRank(global::System.Int32 rankId, global::System.String description)
        {
            Rank rank = new Rank();
            rank.RankId = rankId;
            rank.Description = description;
            return rank;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RankId
        {
            get
            {
                return _RankId;
            }
            set
            {
                if (_RankId != value)
                {
                    OnRankIdChanging(value);
                    ReportPropertyChanging("RankId");
                    _RankId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RankId");
                    OnRankIdChanged();
                }
            }
        }
        private global::System.Int32 _RankId;
        partial void OnRankIdChanging(global::System.Int32 value);
        partial void OnRankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_EVENT_TBL_RANK", "Division")]
        public EntityCollection<Division> Divisions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Division>("WKSAModel.FK_TBL_EVENT_TBL_RANK", "Division");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Division>("WKSAModel.FK_TBL_EVENT_TBL_RANK", "Division", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_STUDENT_TBL_RANK", "Student")]
        public EntityCollection<Student> Students
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Student>("WKSAModel.FK_TBL_STUDENT_TBL_RANK", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Student>("WKSAModel.FK_TBL_STUDENT_TBL_RANK", "Student", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_Competitor_Rank", "Competitor")]
        public EntityCollection<Competitor> Competitors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Competitor>("WKSAModel.FK_Competitor_Rank", "Competitor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Competitor>("WKSAModel.FK_Competitor_Rank", "Competitor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_GRAND_CHAMP_TBL_RANK", "GrandChampion")]
        public EntityCollection<GrandChampion> GrandChampions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GrandChampion>("WKSAModel.FK_TBL_GRAND_CHAMP_TBL_RANK", "GrandChampion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GrandChampion>("WKSAModel.FK_TBL_GRAND_CHAMP_TBL_RANK", "GrandChampion", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WKSAModel", Name="School")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class School : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new School object.
        /// </summary>
        /// <param name="schoolId">Initial value of the SchoolId property.</param>
        /// <param name="schoolCode">Initial value of the SchoolCode property.</param>
        /// <param name="schoolName">Initial value of the SchoolName property.</param>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        /// <param name="instructorName">Initial value of the InstructorName property.</param>
        public static School CreateSchool(global::System.Int32 schoolId, global::System.String schoolCode, global::System.String schoolName, global::System.Int32 countryId, global::System.String instructorName)
        {
            School school = new School();
            school.SchoolId = schoolId;
            school.SchoolCode = schoolCode;
            school.SchoolName = schoolName;
            school.CountryId = countryId;
            school.InstructorName = instructorName;
            return school;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SchoolId
        {
            get
            {
                return _SchoolId;
            }
            set
            {
                if (_SchoolId != value)
                {
                    OnSchoolIdChanging(value);
                    ReportPropertyChanging("SchoolId");
                    _SchoolId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SchoolId");
                    OnSchoolIdChanged();
                }
            }
        }
        private global::System.Int32 _SchoolId;
        partial void OnSchoolIdChanging(global::System.Int32 value);
        partial void OnSchoolIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SchoolCode
        {
            get
            {
                return _SchoolCode;
            }
            set
            {
                OnSchoolCodeChanging(value);
                ReportPropertyChanging("SchoolCode");
                _SchoolCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SchoolCode");
                OnSchoolCodeChanged();
            }
        }
        private global::System.String _SchoolCode;
        partial void OnSchoolCodeChanging(global::System.String value);
        partial void OnSchoolCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SchoolName
        {
            get
            {
                return _SchoolName;
            }
            set
            {
                OnSchoolNameChanging(value);
                ReportPropertyChanging("SchoolName");
                _SchoolName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SchoolName");
                OnSchoolNameChanged();
            }
        }
        private global::System.String _SchoolName;
        partial void OnSchoolNameChanging(global::System.String value);
        partial void OnSchoolNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InstructorName
        {
            get
            {
                return _InstructorName;
            }
            set
            {
                OnInstructorNameChanging(value);
                ReportPropertyChanging("InstructorName");
                _InstructorName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InstructorName");
                OnInstructorNameChanged();
            }
        }
        private global::System.String _InstructorName;
        partial void OnInstructorNameChanging(global::System.String value);
        partial void OnInstructorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InstructorId
        {
            get
            {
                return _InstructorId;
            }
            set
            {
                OnInstructorIdChanging(value);
                ReportPropertyChanging("InstructorId");
                _InstructorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstructorId");
                OnInstructorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _InstructorId;
        partial void OnInstructorIdChanging(Nullable<global::System.Int32> value);
        partial void OnInstructorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Rank
        {
            get
            {
                return _Rank;
            }
            set
            {
                OnRankChanging(value);
                ReportPropertyChanging("Rank");
                _Rank = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rank");
                OnRankChanged();
            }
        }
        private Nullable<global::System.Int32> _Rank;
        partial void OnRankChanging(Nullable<global::System.Int32> value);
        partial void OnRankChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_SCHOOL_TBL_COUNTRY", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("WKSAModel.FK_TBL_SCHOOL_TBL_COUNTRY", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("WKSAModel.FK_TBL_SCHOOL_TBL_COUNTRY", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("WKSAModel.FK_TBL_SCHOOL_TBL_COUNTRY", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("WKSAModel.FK_TBL_SCHOOL_TBL_COUNTRY", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_SCHOOL_TBL_STUDENT", "Student")]
        public Student Student
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("WKSAModel.FK_TBL_SCHOOL_TBL_STUDENT", "Student").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("WKSAModel.FK_TBL_SCHOOL_TBL_STUDENT", "Student").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Student> StudentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("WKSAModel.FK_TBL_SCHOOL_TBL_STUDENT", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Student>("WKSAModel.FK_TBL_SCHOOL_TBL_STUDENT", "Student", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_STUDENT_TBL_SCHOOL", "Student")]
        public EntityCollection<Student> Students
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Student>("WKSAModel.FK_TBL_STUDENT_TBL_SCHOOL", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Student>("WKSAModel.FK_TBL_STUDENT_TBL_SCHOOL", "Student", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WKSAModel", Name="Student")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Student : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Student object.
        /// </summary>
        /// <param name="studentId">Initial value of the StudentId property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="rankId">Initial value of the RankId property.</param>
        /// <param name="gender">Initial value of the Gender property.</param>
        /// <param name="schoolId">Initial value of the SchoolId property.</param>
        /// <param name="isSchoolOwner">Initial value of the IsSchoolOwner property.</param>
        public static Student CreateStudent(global::System.Int32 studentId, global::System.String firstName, global::System.String lastName, global::System.Int32 rankId, global::System.String gender, global::System.Int32 schoolId, global::System.Boolean isSchoolOwner)
        {
            Student student = new Student();
            student.StudentId = studentId;
            student.FirstName = firstName;
            student.LastName = lastName;
            student.RankId = rankId;
            student.Gender = gender;
            student.SchoolId = schoolId;
            student.IsSchoolOwner = isSchoolOwner;
            return student;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudentId
        {
            get
            {
                return _StudentId;
            }
            set
            {
                if (_StudentId != value)
                {
                    OnStudentIdChanging(value);
                    ReportPropertyChanging("StudentId");
                    _StudentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StudentId");
                    OnStudentIdChanged();
                }
            }
        }
        private global::System.Int32 _StudentId;
        partial void OnStudentIdChanging(global::System.Int32 value);
        partial void OnStudentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WKSAId
        {
            get
            {
                return _WKSAId;
            }
            set
            {
                OnWKSAIdChanging(value);
                ReportPropertyChanging("WKSAId");
                _WKSAId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WKSAId");
                OnWKSAIdChanged();
            }
        }
        private global::System.String _WKSAId;
        partial void OnWKSAIdChanging(global::System.String value);
        partial void OnWKSAIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BlackBeltId
        {
            get
            {
                return _BlackBeltId;
            }
            set
            {
                OnBlackBeltIdChanging(value);
                ReportPropertyChanging("BlackBeltId");
                _BlackBeltId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BlackBeltId");
                OnBlackBeltIdChanged();
            }
        }
        private global::System.String _BlackBeltId;
        partial void OnBlackBeltIdChanging(global::System.String value);
        partial void OnBlackBeltIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfBirth;
        partial void OnDateOfBirthChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address3
        {
            get
            {
                return _Address3;
            }
            set
            {
                OnAddress3Changing(value);
                ReportPropertyChanging("Address3");
                _Address3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address3");
                OnAddress3Changed();
            }
        }
        private global::System.String _Address3;
        partial void OnAddress3Changing(global::System.String value);
        partial void OnAddress3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address4
        {
            get
            {
                return _Address4;
            }
            set
            {
                OnAddress4Changing(value);
                ReportPropertyChanging("Address4");
                _Address4 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address4");
                OnAddress4Changed();
            }
        }
        private global::System.String _Address4;
        partial void OnAddress4Changing(global::System.String value);
        partial void OnAddress4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address5
        {
            get
            {
                return _Address5;
            }
            set
            {
                OnAddress5Changing(value);
                ReportPropertyChanging("Address5");
                _Address5 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address5");
                OnAddress5Changed();
            }
        }
        private global::System.String _Address5;
        partial void OnAddress5Changing(global::System.String value);
        partial void OnAddress5Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Postcode
        {
            get
            {
                return _Postcode;
            }
            set
            {
                OnPostcodeChanging(value);
                ReportPropertyChanging("Postcode");
                _Postcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Postcode");
                OnPostcodeChanged();
            }
        }
        private global::System.String _Postcode;
        partial void OnPostcodeChanging(global::System.String value);
        partial void OnPostcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryId;
        partial void OnCountryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RankId
        {
            get
            {
                return _RankId;
            }
            set
            {
                OnRankIdChanging(value);
                ReportPropertyChanging("RankId");
                _RankId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RankId");
                OnRankIdChanged();
            }
        }
        private global::System.Int32 _RankId;
        partial void OnRankIdChanging(global::System.Int32 value);
        partial void OnRankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SchoolId
        {
            get
            {
                return _SchoolId;
            }
            set
            {
                OnSchoolIdChanging(value);
                ReportPropertyChanging("SchoolId");
                _SchoolId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SchoolId");
                OnSchoolIdChanged();
            }
        }
        private global::System.Int32 _SchoolId;
        partial void OnSchoolIdChanging(global::System.Int32 value);
        partial void OnSchoolIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSchoolOwner
        {
            get
            {
                return _IsSchoolOwner;
            }
            set
            {
                OnIsSchoolOwnerChanging(value);
                ReportPropertyChanging("IsSchoolOwner");
                _IsSchoolOwner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSchoolOwner");
                OnIsSchoolOwnerChanged();
            }
        }
        private global::System.Boolean _IsSchoolOwner;
        partial void OnIsSchoolOwnerChanging(global::System.Boolean value);
        partial void OnIsSchoolOwnerChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_STUDENT_TBL_COUNTRY", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("WKSAModel.FK_TBL_STUDENT_TBL_COUNTRY", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("WKSAModel.FK_TBL_STUDENT_TBL_COUNTRY", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("WKSAModel.FK_TBL_STUDENT_TBL_COUNTRY", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("WKSAModel.FK_TBL_STUDENT_TBL_COUNTRY", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_STUDENT_TBL_RANK", "Rank")]
        public Rank Rank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("WKSAModel.FK_TBL_STUDENT_TBL_RANK", "Rank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("WKSAModel.FK_TBL_STUDENT_TBL_RANK", "Rank").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Rank> RankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("WKSAModel.FK_TBL_STUDENT_TBL_RANK", "Rank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Rank>("WKSAModel.FK_TBL_STUDENT_TBL_RANK", "Rank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_SCHOOL_TBL_STUDENT", "School")]
        public EntityCollection<School> Schools
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<School>("WKSAModel.FK_TBL_SCHOOL_TBL_STUDENT", "School");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<School>("WKSAModel.FK_TBL_SCHOOL_TBL_STUDENT", "School", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_STUDENT_TBL_SCHOOL", "School")]
        public School School
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<School>("WKSAModel.FK_TBL_STUDENT_TBL_SCHOOL", "School").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<School>("WKSAModel.FK_TBL_STUDENT_TBL_SCHOOL", "School").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<School> SchoolReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<School>("WKSAModel.FK_TBL_STUDENT_TBL_SCHOOL", "School");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<School>("WKSAModel.FK_TBL_STUDENT_TBL_SCHOOL", "School", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_COMPETITOR_TBL_STUDENT", "Competitor")]
        public EntityCollection<Competitor> Competitors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Competitor>("WKSAModel.FK_TBL_COMPETITOR_TBL_STUDENT", "Competitor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Competitor>("WKSAModel.FK_TBL_COMPETITOR_TBL_STUDENT", "Competitor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WKSAModel", Name="Tournament")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tournament : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tournament object.
        /// </summary>
        /// <param name="tournamentId">Initial value of the TournamentId property.</param>
        /// <param name="tournamentName">Initial value of the TournamentName property.</param>
        /// <param name="venueId">Initial value of the VenueId property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        public static Tournament CreateTournament(global::System.Int32 tournamentId, global::System.String tournamentName, global::System.Int32 venueId, global::System.DateTime startDate, global::System.DateTime endDate)
        {
            Tournament tournament = new Tournament();
            tournament.TournamentId = tournamentId;
            tournament.TournamentName = tournamentName;
            tournament.VenueId = venueId;
            tournament.StartDate = startDate;
            tournament.EndDate = endDate;
            return tournament;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TournamentId
        {
            get
            {
                return _TournamentId;
            }
            set
            {
                if (_TournamentId != value)
                {
                    OnTournamentIdChanging(value);
                    ReportPropertyChanging("TournamentId");
                    _TournamentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TournamentId");
                    OnTournamentIdChanged();
                }
            }
        }
        private global::System.Int32 _TournamentId;
        partial void OnTournamentIdChanging(global::System.Int32 value);
        partial void OnTournamentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TournamentName
        {
            get
            {
                return _TournamentName;
            }
            set
            {
                OnTournamentNameChanging(value);
                ReportPropertyChanging("TournamentName");
                _TournamentName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TournamentName");
                OnTournamentNameChanged();
            }
        }
        private global::System.String _TournamentName;
        partial void OnTournamentNameChanging(global::System.String value);
        partial void OnTournamentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VenueId
        {
            get
            {
                return _VenueId;
            }
            set
            {
                OnVenueIdChanging(value);
                ReportPropertyChanging("VenueId");
                _VenueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VenueId");
                OnVenueIdChanged();
            }
        }
        private global::System.Int32 _VenueId;
        partial void OnVenueIdChanging(global::System.Int32 value);
        partial void OnVenueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_TOURNAMENT_TBL_VENUE", "Venue")]
        public Venue Venue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Venue>("WKSAModel.FK_TBL_TOURNAMENT_TBL_VENUE", "Venue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Venue>("WKSAModel.FK_TBL_TOURNAMENT_TBL_VENUE", "Venue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Venue> VenueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Venue>("WKSAModel.FK_TBL_TOURNAMENT_TBL_VENUE", "Venue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Venue>("WKSAModel.FK_TBL_TOURNAMENT_TBL_VENUE", "Venue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_TOURNAMENT_EVENT_TBL_TOURNAMENT", "TournamentDivision")]
        public EntityCollection<TournamentDivision> TournamentDivisions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TournamentDivision>("WKSAModel.FK_TBL_TOURNAMENT_EVENT_TBL_TOURNAMENT", "TournamentDivision");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TournamentDivision>("WKSAModel.FK_TBL_TOURNAMENT_EVENT_TBL_TOURNAMENT", "TournamentDivision", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_COMPETITOR_TBL_TOURNAMENT", "Competitor")]
        public EntityCollection<Competitor> Competitors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Competitor>("WKSAModel.FK_TBL_COMPETITOR_TBL_TOURNAMENT", "Competitor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Competitor>("WKSAModel.FK_TBL_COMPETITOR_TBL_TOURNAMENT", "Competitor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "TournamentGrandChampion", "GrandChampion")]
        public EntityCollection<GrandChampion> GrandChampions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GrandChampion>("WKSAModel.TournamentGrandChampion", "GrandChampion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GrandChampion>("WKSAModel.TournamentGrandChampion", "GrandChampion", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WKSAModel", Name="TournamentDivision")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TournamentDivision : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TournamentDivision object.
        /// </summary>
        /// <param name="tournamentId">Initial value of the TournamentId property.</param>
        /// <param name="divisionId">Initial value of the DivisionId property.</param>
        /// <param name="isCompleted">Initial value of the IsCompleted property.</param>
        /// <param name="medalsReceived">Initial value of the MedalsReceived property.</param>
        public static TournamentDivision CreateTournamentDivision(global::System.Int32 tournamentId, global::System.Int32 divisionId, global::System.Boolean isCompleted, global::System.Boolean medalsReceived)
        {
            TournamentDivision tournamentDivision = new TournamentDivision();
            tournamentDivision.TournamentId = tournamentId;
            tournamentDivision.DivisionId = divisionId;
            tournamentDivision.IsCompleted = isCompleted;
            tournamentDivision.MedalsReceived = medalsReceived;
            return tournamentDivision;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TournamentId
        {
            get
            {
                return _TournamentId;
            }
            set
            {
                if (_TournamentId != value)
                {
                    OnTournamentIdChanging(value);
                    ReportPropertyChanging("TournamentId");
                    _TournamentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TournamentId");
                    OnTournamentIdChanged();
                }
            }
        }
        private global::System.Int32 _TournamentId;
        partial void OnTournamentIdChanging(global::System.Int32 value);
        partial void OnTournamentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DivisionId
        {
            get
            {
                return _DivisionId;
            }
            set
            {
                if (_DivisionId != value)
                {
                    OnDivisionIdChanging(value);
                    ReportPropertyChanging("DivisionId");
                    _DivisionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DivisionId");
                    OnDivisionIdChanged();
                }
            }
        }
        private global::System.Int32 _DivisionId;
        partial void OnDivisionIdChanging(global::System.Int32 value);
        partial void OnDivisionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCompleted
        {
            get
            {
                return _IsCompleted;
            }
            set
            {
                OnIsCompletedChanging(value);
                ReportPropertyChanging("IsCompleted");
                _IsCompleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCompleted");
                OnIsCompletedChanged();
            }
        }
        private global::System.Boolean _IsCompleted;
        partial void OnIsCompletedChanging(global::System.Boolean value);
        partial void OnIsCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean MedalsReceived
        {
            get
            {
                return _MedalsReceived;
            }
            set
            {
                OnMedalsReceivedChanging(value);
                ReportPropertyChanging("MedalsReceived");
                _MedalsReceived = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedalsReceived");
                OnMedalsReceivedChanged();
            }
        }
        private global::System.Boolean _MedalsReceived;
        partial void OnMedalsReceivedChanging(global::System.Boolean value);
        partial void OnMedalsReceivedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_TOURNAMENT_EVENT_TBL_EVENT", "Division")]
        public Division Division
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("WKSAModel.FK_TBL_TOURNAMENT_EVENT_TBL_EVENT", "Division").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("WKSAModel.FK_TBL_TOURNAMENT_EVENT_TBL_EVENT", "Division").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Division> DivisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("WKSAModel.FK_TBL_TOURNAMENT_EVENT_TBL_EVENT", "Division");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Division>("WKSAModel.FK_TBL_TOURNAMENT_EVENT_TBL_EVENT", "Division", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_TOURNAMENT_EVENT_TBL_TOURNAMENT", "Tournament")]
        public Tournament Tournament
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("WKSAModel.FK_TBL_TOURNAMENT_EVENT_TBL_TOURNAMENT", "Tournament").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("WKSAModel.FK_TBL_TOURNAMENT_EVENT_TBL_TOURNAMENT", "Tournament").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tournament> TournamentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tournament>("WKSAModel.FK_TBL_TOURNAMENT_EVENT_TBL_TOURNAMENT", "Tournament");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tournament>("WKSAModel.FK_TBL_TOURNAMENT_EVENT_TBL_TOURNAMENT", "Tournament", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WKSAModel", Name="Venue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Venue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Venue object.
        /// </summary>
        /// <param name="venueId">Initial value of the VenueId property.</param>
        /// <param name="venueName">Initial value of the VenueName property.</param>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        public static Venue CreateVenue(global::System.Int32 venueId, global::System.String venueName, global::System.Int32 countryId)
        {
            Venue venue = new Venue();
            venue.VenueId = venueId;
            venue.VenueName = venueName;
            venue.CountryId = countryId;
            return venue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VenueId
        {
            get
            {
                return _VenueId;
            }
            set
            {
                if (_VenueId != value)
                {
                    OnVenueIdChanging(value);
                    ReportPropertyChanging("VenueId");
                    _VenueId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VenueId");
                    OnVenueIdChanged();
                }
            }
        }
        private global::System.Int32 _VenueId;
        partial void OnVenueIdChanging(global::System.Int32 value);
        partial void OnVenueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VenueName
        {
            get
            {
                return _VenueName;
            }
            set
            {
                OnVenueNameChanging(value);
                ReportPropertyChanging("VenueName");
                _VenueName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VenueName");
                OnVenueNameChanged();
            }
        }
        private global::System.String _VenueName;
        partial void OnVenueNameChanging(global::System.String value);
        partial void OnVenueNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address3
        {
            get
            {
                return _Address3;
            }
            set
            {
                OnAddress3Changing(value);
                ReportPropertyChanging("Address3");
                _Address3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address3");
                OnAddress3Changed();
            }
        }
        private global::System.String _Address3;
        partial void OnAddress3Changing(global::System.String value);
        partial void OnAddress3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address4
        {
            get
            {
                return _Address4;
            }
            set
            {
                OnAddress4Changing(value);
                ReportPropertyChanging("Address4");
                _Address4 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address4");
                OnAddress4Changed();
            }
        }
        private global::System.String _Address4;
        partial void OnAddress4Changing(global::System.String value);
        partial void OnAddress4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address5
        {
            get
            {
                return _Address5;
            }
            set
            {
                OnAddress5Changing(value);
                ReportPropertyChanging("Address5");
                _Address5 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address5");
                OnAddress5Changed();
            }
        }
        private global::System.String _Address5;
        partial void OnAddress5Changing(global::System.String value);
        partial void OnAddress5Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Postcode
        {
            get
            {
                return _Postcode;
            }
            set
            {
                OnPostcodeChanging(value);
                ReportPropertyChanging("Postcode");
                _Postcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Postcode");
                OnPostcodeChanged();
            }
        }
        private global::System.String _Postcode;
        partial void OnPostcodeChanging(global::System.String value);
        partial void OnPostcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_Venue_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("WKSAModel.FK_Venue_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("WKSAModel.FK_Venue_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("WKSAModel.FK_Venue_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("WKSAModel.FK_Venue_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WKSAModel", "FK_TBL_TOURNAMENT_TBL_VENUE", "Tournament")]
        public EntityCollection<Tournament> Tournaments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tournament>("WKSAModel.FK_TBL_TOURNAMENT_TBL_VENUE", "Tournament");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tournament>("WKSAModel.FK_TBL_TOURNAMENT_TBL_VENUE", "Tournament", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
